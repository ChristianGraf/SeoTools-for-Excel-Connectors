<?xml version="1.0" encoding="utf-8" ?>
<Suite Title="Sistrix" Id="Sistrix" SourceUrl="#" HelpUrl="#" HelpText="Documentation">

  <Author Name="Niels Bosma" Url=""/>

  <Settings HelpText="What's this?" HelpUrl="http://seotoolsforexcel.com/sistrix/">
    <Text Id="ReadApiKey" Title="Read API key" Required="true" HelpUrl="http://seotoolsforexcel.com/sistrix-connector/"/>
  </Settings>
  
    <RestConnector Id="DomainOverview" Title="Domain Overview" HelpUrl="" AvailableInSpider="true">
    <Parameters>
      <Text Id="Url" Title="Url" DefaultValue="" Required="true"/>
    </Parameters>
    <Fetch>
      <Fetch.Url>
      <![CDATA[
        @{
          long expires = DateTime.Now.AddMinutes(5).UnixTimeStampUtc();
          string signature = Utils.UrlEncode(Utils.HmacSha1((Model.AccessId+"\n"+expires), Model.SecretKey));
        }
        http://lsapi.seomoz.com/linkscape/url-metrics/@(Utils.UrlEncode(Model.Url))?
        Cols=@BitFlags()
        &AccessID=@(Model.AccessId)
        &Expires=@(expires)
        &Signature=@(signature)
      ]]>  
      </Fetch.Url>
      <HttpSettings>
        <IntervalBetweenRequests RandomFrom="@IntervalBetweenRequests()" RandomTo="@IntervalBetweenRequests()" IfSame="Host"/>
        <RequestHeaders>
          <Header Name='User-Agent'>SeoToolsForExcel</Header>
        </RequestHeaders>
      </HttpSettings>
    </Fetch>
    <Parse>
      <Resource Id="Cols"/>
    </Parse>
    <Fail>
      <Regex Expr="twitter\.com\/([^&quot;]+)" Group="1"/>
    </Fail>
  </RestConnector>
  
  <RestConnector Id="Classifiers" Title="Classifiers" Hidden="true">
    <Fetch Url="https://uclassify.com/browse"/>
    <Parse>
      <XPath Expr="//ul[contains(@@class, 'list-group')]/li/h4">
        <XPath Expr="a" Attribute="href" Id="Id" Title="Id"/>
        <XPath Expr="a" Id="Title" Title="Title"/>
      </XPath>
    </Parse>
  </RestConnector>

    <Parse>
      <Compute Id="Classification">
        <Compute.Expr>
          <![CDATA[
          @{
            string body = Model.FetchedResult.Body;
            string result = JObject.Parse(body)["cls1"].Children().Select(e => (JProperty)e).OrderByDescending(e => e.Value).Select(e => e.Name).Take(1).FirstOrDefault();
          }
          @result
        ]]>
        </Compute.Expr>
      </Compute>
      <Compute Id="Probability" Converter="Double" Converter.ResultFormat="0.00%">
        <Compute.Expr>
        <![CDATA[
        @{
          string body = Model.FetchedResult.Body;
          string result = JObject.Parse(body)["cls1"].Children().Select(e => (JProperty)e).OrderByDescending(e => e.Value).Select(e => e.Value.ToString()).Take(1).FirstOrDefault();
        }
        @result
        ]]>
        </Compute.Expr>
      </Compute>
    </Parse>
    <Fail>
      <JsonPath Expr="$.errorMessage"/>
    </Fail>
  </RestConnector>

</Suite>


